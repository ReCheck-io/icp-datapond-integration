service: () -> {
    addPoints: (principal, nat, text) -> (variant {Ok:record {id:principal; availablePoints:nat; createdAt:nat64; totalRedeemed:nat; updatedAt:nat64; totalPoints:nat; transactions:vec record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}});
    getPendingRedeemTransactions: () -> (variant {Ok:vec record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}}) query;
    getPlatformAnalytics: () -> (variant {Ok:record {availablePoints:nat64; redeemedPoints:nat64; totalPoints:nat64; totalTransactions:nat64}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}}) query;
    getUser: (principal) -> (variant {Ok:record {id:principal; availablePoints:nat; createdAt:nat64; totalRedeemed:nat; updatedAt:nat64; totalPoints:nat; transactions:vec record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}}) query;
    getUserTransactions: (principal) -> (variant {Ok:vec record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}}) query;
    initializeCanister: (principal) -> (variant {Ok:record {id:principal; createdAt:nat64}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}});
    initializeUser: (principal) -> (variant {Ok:record {id:principal; availablePoints:nat; createdAt:nat64; totalRedeemed:nat; updatedAt:nat64; totalPoints:nat; transactions:vec record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}});
    requestRedeem: (principal, nat, text, text) -> (variant {Ok:record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}});
    updateRedeemStatus: (principal, text, text) -> (variant {Ok:record {id:text; status:text; transactionType:text; createdAt:nat64; description:text; updatedAt:nat64; userPrincipal:principal; address:text; amount:nat}; Err:variant {InvalidPayload:text; NotFound:text; Unauthorized:text; Conflict:text}});
}
